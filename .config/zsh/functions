#!/bin/sh

ttz() {
    if readlink /etc/localtime | grep Berlin > /dev/null; then
        doas -- ln -sf /usr/share/zoneinfo/Asia/Dhaka /etc/localtime
    else
        doas -- ln -sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime
    fi
}

short() { curl -F "shorten=$1" 0x0.st; }

h() {
    out=$($1 --help || $1 -h)
    echo "$out" | nvim -R
}
# h() { "$1" --help | nvim -R; }

M() { man "$1" | nvim -R; }

N() {
    pidof mpd > /dev/null || mpd 2> /dev/null
    ncmpcpp
}

bt() {
    pactl list | grep -i "active profile: a2dp_sink" > /dev/null &&
        pactl set-card-profile 3 "headset_head_unit"
    pactl set-card-profile 3 "a2dp_sink"
}

autoLogin() {
    path=/etc/systemd/system/getty@tty1.service.d/override.conf
    [ "$1" ] && echo '' | doas tee $path && return
    printf "%s" "[Service]\nExecStart=\nExecStart=-/usr/bin/agetty --autologin $USER --noclear %I $TERM" | doas tee $path
}

disableMinNCam() {
    [ "$1" ] && echo "" | doas tee /etc/modprobe.d/blacklist.conf && return
    echo install uvcvideo /bin/true | doas -- tee -a /etc/modprobe.d/blacklist.conf > /dev/null
    echo install "$(sed 1q /proc/asound/modules | cut -d ' ' -f 3)" /bin/true | doas -- tee -a /etc/modprobe.d/blacklist.conf > /dev/null
}

gsa() { git subtree add --prefix "$1" "$2" master --squash; }
gsp() { git subtree pull --prefix "$1" "$2" master --squash; }

connect() { nmcli device wifi connect "$1" password "$2"; }
vpn() { doas -- openvpn --config ~/.local/share/ovpn/vpnbook-us1-tcp80.ovpn; }

sf() { fc-list | grep -i "$1"; }

check() {
    time sh -c 'for i in $(seq 1000); do toy > /dev/null 2>&1; done'
    # time sh -c 'for i in $(seq 1000000); do $@ > /dev/null; done'
}

ug() { doas -- grub-mkconfig -o /boot/grub/grub.cfg; }

server() {
    [ "$1" ] && echo 'Server = http://mirror.xeonbd.com/archlinux/$repo/os/$arch' |
        doas tee /etc/pacman.d/mirrorlist && return
    doas -- reflector --verbose --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
}

calc() { printf "%s\n" "$*" | bc; }

################################################################################
#                             Wifi
################################################################################

wifistop() { doas systemctl stop iwd; }
wifistart() { doas systemctl start iwd; }

# wifiStop() { doas systemctl stop systemd-resolved; }
# wifiStart() { doas systemctl start systemd-resolved; }

wificon() {
    iwctl station "$WIFI_CARD" get-networks
    iwctl \
        --passphrase "${1:-$WIFI_PASS}" \
        station "$WIFI_CARD" \
        connect "${2:-$WIFI_SSID}"
}

wifishow() { iwctl station "$WIFI_CARD" show; }
